apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpl-prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
        runAsGroup: 65534
        fsGroup: 65534
      containers:
        - name: prometheus
          image: prom/prometheus:v2.54.1
          imagePullPolicy: IfNotPresent
          args:
            - "--storage.tsdb.retention.time=7d"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - name: cfm-prometheus
              mountPath: /etc/prometheus/
            - name: pvc-prometheus
              mountPath: /prometheus/
      volumes:
        - name: cfm-prometheus
          configMap:
            defaultMode: 420
            name: cfm-prometheus
        - name: pvc-prometheus
          persistentVolumeClaim:
            claimName: pvc-prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: svc-prometheus
  namespace: monitoring
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus
  sessionAffinity: None
  type: LoadBalancer
